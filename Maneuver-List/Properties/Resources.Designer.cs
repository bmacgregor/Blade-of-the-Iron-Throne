//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maneuver_List.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maneuver_List.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bash|0/1|(2)|1(2)|(1)|-|(1)|0|0|(1)|(1)|1/2|This is the standard attack for all blunt weapons that are swung. It is learned immediately.
        ///
        ///Extra power may be added to a Bash by expending 1 (and only 1) extra MP die prior to rolling, and adding 1 to damage in the event of a successful hit. If a Bash successfully strikes the head, the Shock rating of such a hit is increased by half that hit’s Impact Rating before the defender’s AV and half BN are subtracted. This Shock even applies if no actual wound is caus [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Attack {
            get {
                return ResourceManager.GetString("Attack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block|(1)|0|(1)|(2)|0|(1)|0|(2)|0|0|(1)|This is the most basic of defenses used to halt or deflect an incoming attack. Where game mechanics are concerned, Blocking works essentially the same as any Parry, except that it uses the shield’s DTN.
        ///
        ///Block is the one exception to the rule that a character may only execute one Maneuver per Exchange, as it may be combined with a Parry if both weapon and shield are wielded. In this case, the DTN for Blocking is increased by +1 for using the off-hand. Otherwise, Blo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Defence {
            get {
                return ResourceManager.GetString("Defence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immobilize|The aggressor tries to improve his initial hold in such a way as to completely immobilize his opponent. This may require several Exchanges of wrestling.
        ///
        ///The aggressor assigns MP dice and, without paying any Activation Cost, checks against TN 7. If he is beaten by the opponent’s defense, the hold is broken and combat returns to a normal melee at engagement range Hand, with the former defender now the aggressor.
        ///
        ///If the defense is tied or overcome, the victor’s QoS is subtracted from the oppon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Grapple {
            get {
                return ResourceManager.GetString("Grapple", resourceCulture);
            }
        }
    }
}
